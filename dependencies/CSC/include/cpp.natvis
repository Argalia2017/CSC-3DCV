<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <!--"https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects?view=vs-2017#BKMK_Why_create_visualizations_"-->
  <!--"https://docs.microsoft.com/en-us/visualstudio/debugger/format-specifiers-in-cpp?view=vs-2017#BKMK_Visual_Studio_2012_format_specifiers"-->
  <!--"https://docs.microsoft.com/en-us/visualstudio/debugger/pseudovariables?view=vs-2017"-->
  <!--"https://docs.microsoft.com/en-us/visualstudio/debugger/context-operator-cpp?view=vs-2017"-->

  <!--csc_type.hpp-->

  <Type Name="CSC::Union&lt;*&gt;">
    <Expand HideRawView="true">
      <ExpandedItem>($T1*)this</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::Interface">
    <Expand HideRawView="true">
      <ExpandedItem>__vfptr</ExpandedItem>
    </Expand>
  </Type>

  <!--csc_core.hpp-->

  <Type Name="CSC::Fat&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[self]" Condition="mLayout!=0">($T2*)mLayout</Item>
      <ExpandedItem>($T2*)mLayout</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::VFat&lt;*&gt;">
    <Expand HideRawView="true">
      <ExpandedItem>(Interface*)&amp;mHolder</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::CFat&lt;*&gt;">
    <Expand HideRawView="true">
      <ExpandedItem>(Interface*)&amp;mHolder</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::RFat&lt;*&gt;">
    <Expand HideRawView="true">
      <ExpandedItem>(Interface*)&amp;mHolder</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::BoxLayout">
    <Expand HideRawView="true">
      <ExpandedItem Condition="mHolder!=0">(CSC::Interface*)&amp;mHolder</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::Box&lt;*&gt;">
    <DisplayString Condition="mHolder==0">{{???}}</DisplayString>
    <Expand HideRawView="true">
      <Item Name="[+]" Condition="mHolder!=0">*($T1*)&amp;mStorage</Item>
    </Expand>
  </Type>

  <Type Name="CSC::Pin&lt;*&gt;">
    <Expand HideRawView="true">
      <ExpandedItem>($T1*)&amp;mStorage</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::RefLayout">
    <Expand HideRawView="true">
      <ExpandedItem Condition="mHandle!=0">(CSC::RefTree*)mHandle</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::Ref&lt;*&gt;">
    <DisplayString Condition="mLayout==0">{{???}}</DisplayString>
    <Expand HideRawView="true">
      <Item Name="[+]" Condition="mLayout!=0">*($T1*)mLayout</Item>
    </Expand>
  </Type>

  <Type Name="CSC::KeyNodeLayout">
    <Expand HideRawView="true">
      <Item Name="[head]">(CSC::KeyHeadLayout*)mHead</Item>
      <Item Name="[layout]">mLayout,x</Item>
      <Item Name="[check]">mCheck</Item>
    </Expand>
  </Type>

  <Type Name="CSC::KeyHeadLayout">
    <Expand HideRawView="true">
      <Item Name="[root]">(CSC::KeyRootLayout*)mRoot</Item>
      <Item Name="[L1_next]">(CSC::KeyHeadLayout*)mL1Next</Item>
      <Item Name="[L2_next]">(CSC::KeyHeadLayout*)mL2Next</Item>
      <Item Name="[L1_hash]">mL1Hash</Item>
      <Item Name="[L2_hash]">mL2Hash</Item>
      <Item Name="[begin]">mBegin,x</Item>
      <Item Name="[end]">mEnd,x</Item>
    </Expand>
  </Type>

  <Type Name="CSC::KeyRootLayout">
    <Expand HideRawView="true">
      <Item Name="[head]">(CSC::KeyHeadLayout*)mHead</Item>
      <Item Name="[ref_node]">(CSC::KeyNodeLayout*)mRefNode</Item>
      <Item Name="[def_node]">(CSC::KeyNodeLayout*)mDefNode</Item>
    </Expand>
  </Type>

  <Type Name="CSC::KeyBaseLayout" Inheritable="false">
    <Expand HideRawView="true">
      <ExpandedItem Condition="mHandle!=0">(CSC::KeyNodeLayout*)mHandle</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::Key&lt;*&gt;">
    <DisplayString Condition="mHandle==0">{{???}}</DisplayString>
    <Expand HideRawView="true">
      <Item Name="[+]" Condition="mHandle!=0">*($T1*)(*(CSC::KeyNodeLayout*)mHandle).mLayout</Item>
    </Expand>
  </Type>

  <Type Name="CSC::SliceLayout">
    <DisplayString Condition="mStep==0">{{???}}</DisplayString>
    <DisplayString Condition="mStep==1">{(char*)mBuffer,s}</DisplayString>
    <DisplayString Condition="mStep==2">{(char16_t*)mBuffer,su}</DisplayString>
    <DisplayString Condition="mStep==4">{(char32_t*)mBuffer,s32}</DisplayString>
    <StringView Condition="mStep==1">(char8_t*)mBuffer</StringView>
    <StringView Condition="mStep==2">(char16_t*)mBuffer</StringView>
    <StringView Condition="mStep==4">(char32_t*)mBuffer</StringView>
    <Expand HideRawView="true">
      <Item Name="[this]">this</Item>
      <Item Name="[size]">mSize</Item>
      <Item Name="[step]">mStep</Item>
    </Expand>
  </Type>

  <Type Name="CSC::OfThis&lt;*&gt;">
    <Expand HideRawView="true">
      <ExpandedItem>mThis</ExpandedItem>
    </Expand>
  </Type>

  <!--csc_basic.hpp-->

  <Type Name="CSC::OptionalLayout">
    <Expand HideRawView="true">
      <Item Name="[error]">mCode</Item>
      <ExpandedItem>mValue</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::AutoRef&lt;*&gt;">
    <DisplayString Condition="mThis.mLayout==0">{{???}}</DisplayString>
    <Expand HideRawView="true">
      <Item Name="[+]" Condition="mThis.mLayout!=0">*($T1*)mLayout</Item>
    </Expand>
  </Type>

  <Type Name="CSC::SharedRef&lt;*&gt;">
    <DisplayString Condition="mThis.mLayout==0">{{???}}</DisplayString>
    <Expand HideRawView="true">
      <Item Name="[+]" Condition="mThis.mLayout!=0">*($T1*)mLayout</Item>
    </Expand>
  </Type>

  <Type Name="CSC::UniqueRef&lt;*&gt;">
    <DisplayString Condition="mThis.mLayout==0">{{???}}</DisplayString>
    <Expand HideRawView="true">
      <Item Name="[+]" Condition="mThis.mLayout!=0">*($T1*)mLayout</Item>
    </Expand>
  </Type>

  <Type Name="CSC::Buffer&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[size]">sizeof(mBuffer)/sizeof($T1)</Item>
      <Item Name="[step]">sizeof($T1)</Item>
      <ExpandedItem>mBuffer</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::RefBufferLayout" Inheritable="false">
    <Expand HideRawView="true">
      <Item Name="[hint]">(CSC::BYTE*)0</Item>
      <Item Name="[hint]">(CSC::WORD*)0</Item>
      <Item Name="[hint]">(CSC::CHAR*)0</Item>
      <Item Name="[hint]">(CSC::QUAD*)0</Item>
    </Expand>
  </Type>

  <Type Name="CSC::RefBufferRealLayout&lt;*&gt;" Inheritable="false">
    <Expand HideRawView="true">
      <Item Name="[hint]" Condition="false">CSC::BYTE_ENDIAN</Item>
      <ArrayItems>
        <Size>mSize</Size>
        <ValuePointer>($T1*)mBuffer</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="CSC::RefBuffer&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[size]" Condition="mThis.mLayout==0">0</Item>
      <Item Name="[size]" Condition="mThis.mLayout!=0">mSize</Item>
      <Item Name="[step]" Condition="mThis.mLayout==0">0</Item>
      <Item Name="[step]" Condition="mThis.mLayout!=0">mStep</Item>
      <Item Name="[fixed]">mThis</Item>
      <Item Name="[hint]" Condition="false">CSC::BYTE_ENDIAN</Item>
      <ArrayItems Condition="mThis.mLayout!=0">
        <Size>mSize&lt;10?mSize:10</Size>
        <ValuePointer>($T1*)mBuffer</ValuePointer>
      </ArrayItems>
      <Item Name="[+]">*(CSC::RefBufferRealLayout&lt;$T1&gt;*)this</Item>
    </Expand>
  </Type>

  <Type Name="CSC::FarBuffer&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[size]" Condition="mThis.mLayout==0">0</Item>
      <Item Name="[size]" Condition="mThis.mLayout!=0">mSize</Item>
      <Item Name="[step]" Condition="mThis.mLayout==0">0</Item>
      <Item Name="[step]" Condition="mThis.mLayout!=0">mStep</Item>
      <Item Name="[fixed]">mThis</Item>
      <ArrayItems>
        <Size>1</Size>
        <ValuePointer>($T1*)mThis.mLayout</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="CSC::TupleNode&lt;*&gt;">
    <Expand HideRawView="true">
      <ExpandedItem Condition="(*(CSC::AllocatorNode*)&amp;m2nd).mNext==-2">m1st</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::AllocatorNode" Inheritable="false">
    <DisplayString Condition="mNext==-2">{{used}}</DisplayString>
    <DisplayString Condition="mNext!=-2">{{???}}</DisplayString>
  </Type>

  <Type Name="CSC::AllocatorRealLayout&lt;*&gt;" Inheritable="false">
    <Expand HideRawView="true">
      <IndexListItems>
        <Size>mAllocator.mSize</Size>
        <ValueNode>((CSC::TupleWrap2&lt;CSC::Union&lt;$T1&gt;,$T2&gt;*)mAllocator.mBuffer)[$i]</ValueNode>
      </IndexListItems>
    </Expand>
  </Type>

  <Type Name="CSC::Allocator&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[length]" Condition="mAllocator.mThis.mLayout==0">0</Item>
      <Item Name="[length]" Condition="mAllocator.mThis.mLayout!=0">mLength</Item>
      <Item Name="[size]" Condition="mAllocator.mThis.mLayout==0">0</Item>
      <Item Name="[size]" Condition="mAllocator.mThis.mLayout!=0">mAllocator.mSize</Item>
      <Item Name="[step]" Condition="mAllocator.mThis.mLayout==0">0</Item>
      <Item Name="[step]" Condition="mAllocator.mThis.mLayout!=0">mAllocator.mStep</Item>
      <Item Name="[fixed]">mAllocator.mThis</Item>
      <ArrayItems Condition="mAllocator.mThis.mLayout!=0">
        <Size>mAllocator.mSize&lt;10?mAllocator.mSize:10</Size>
        <ValuePointer>(CSC::TupleNode&lt;$T1,$T2&gt;*)mAllocator.mBuffer</ValuePointer>
      </ArrayItems>
      <Item Name="[+]">*(CSC::AllocatorRealLayout&lt;$T1,$T2&gt;*)this</Item>
    </Expand>
  </Type>

  <!--csc_math.hpp-->

  <Type Name="CSC::NormalError">
    <Expand HideRawView="true">
      <ExpandedItem>(CSC::NormalErrorLayout*)this</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::IntegerLayout">
    <Expand HideRawView="true">
      <Item Name="[width]">mWidth</Item>
      <ExpandedItem>mInteger</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="JetLayout">
    <Expand HideRawView="true">
      <Item Name="[fx]">mFX</Item>
      <Item Name="[ex]">mEX</Item>
      <Item Name="[dx]">*(CSC::RefBufferRealLayout&lt;double&gt;*)&amp;mDX</Item>
    </Expand>
  </Type>

  <!--csc_array.hpp-->

  <Type Name="CSC::Array&lt;*&gt;">
    <Expand HideRawView="true">
      <ExpandedItem>(CSC::RefBuffer&lt;$T1&gt;*)&amp;mArray</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::String&lt;*&gt;">
    <DisplayString Condition="mString.mStep==0">{{???}}</DisplayString>
    <DisplayString Condition="mString.mStep==1">{(char*)mString.mBuffer,s}</DisplayString>
    <DisplayString Condition="mString.mStep==2">{(char16_t*)mString.mBuffer,su}</DisplayString>
    <DisplayString Condition="mString.mStep==4">{(char32_t*)mString.mBuffer,s32}</DisplayString>
    <StringView Condition="mString.mStep==1">(char*)mString.mBuffer</StringView>
    <StringView Condition="mString.mStep==2">(char16_t*)mString.mBuffer</StringView>
    <StringView Condition="mString.mStep==4">(char32_t*)mString.mBuffer</StringView>
    <Expand HideRawView="true">
      <Item Name="[this]">this</Item>
      <ExpandedItem>(CSC::RefBuffer&lt;$T1&gt;*)&amp;mString</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::String&lt;char8_t&gt;" Priority="High">
    <DisplayString Condition="mString.mStep==0">{{???}}</DisplayString>
    <DisplayString Condition="mString.mStep==1">{(char8_t*)mString.mBuffer,s8}</DisplayString>
    <StringView Condition="mString.mStep==1">(char8_t*)mString.mBuffer</StringView>
    <Expand HideRawView="true">
      <Item Name="[this]">this</Item>
      <ExpandedItem>(CSC::RefBuffer&lt;char8_t&gt;*)&amp;mString</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::Deque&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[read]">mRead</Item>
      <Item Name="[write]">mWrite</Item>
      <ExpandedItem>(CSC::RefBuffer&lt;$T1&gt;*)&amp;mDeque</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::Priority&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[read]">mRead</Item>
      <Item Name="[write]">mWrite</Item>
      <ExpandedItem>(CSC::RefBuffer&lt;$T1&gt;*)&amp;mPriority</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::List&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[first]">mFirst</Item>
      <Item Name="[last]">mLast</Item>
      <ExpandedItem>(CSC::Allocator&lt;$T1,CSC::ListNode&gt;*)&amp;mList</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::ArrayList&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[range]">mRange</Item>
      <ExpandedItem>(CSC::Allocator&lt;$T1,CSC::ArrayListNode&gt;*)&amp;mList</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::SortedMapRealLayout&lt;*&gt;" Inheritable="false">
    <Expand HideRawView="true">
      <IndexListItems>
        <Size>mWrite</Size>
        <ValueNode>((CSC::TupleNode&lt;$T1,CSC::SortedMapNode&gt;*)(*(CSC::SortedMapRoot*)mThis.mLayout).mList.mAllocator.mBuffer)[mRange[$i]].m2nd.mMap</ValueNode>
      </IndexListItems>
    </Expand>
  </Type>

  <Type Name="CSC::SortedMap&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[size]" Condition="mRange.mThis.mLayout==0">0</Item>
      <Item Name="[size]" Condition="mRange.mThis.mLayout!=0">mWrite</Item>
      <Item Name="[step]" Condition="mRange.mThis.mLayout==0">0</Item>
      <Item Name="[step]" Condition="mRange.mThis.mLayout!=0">mRange.mStep</Item>
      <Item Name="[fixed]">mThis</Item>
      <IndexListItems Condition="mRange.mThis.mLayout!=0">
        <Size>mWrite&lt;10?mWrite:10</Size>
        <ValueNode>((CSC::TupleNode&lt;$T1,CSC::SortedMapNode&gt;*)(*(CSC::SortedMapRoot*)mThis.mLayout).mList.mAllocator.mBuffer)[mRange[$i]].m2nd.mMap</ValueNode>
      </IndexListItems>
      <Item Name="[+]">*(CSC::SortedMapRealLayout&lt;$T1&gt;*)this</Item>
    </Expand>
  </Type>

  <Type Name="CSC::Set&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[root]">mRoot</Item>
      <ExpandedItem>(CSC::Allocator&lt;$T1,CSC::SetNode&gt;*)&amp;mSet</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::HashSet&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[range]">mRange</Item>
      <ExpandedItem>(CSC::Allocator&lt;$T1,CSC::HashSetNode&gt;*)&amp;mSet</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::BitSet">
    <Expand HideRawView="true">
      <Item Name="[width]">mWidth</Item>
      <ExpandedItem>mSet</ExpandedItem>
    </Expand>
  </Type>

  <!--csc_image.hpp-->

  <Type Name="CSC::Image&lt;*&gt;">
    <Expand HideRawView="true">
      <Item Name="[stride]">mStride</Item>
      <Item Name="[bx]">mBX</Item>
      <Item Name="[by]">mBY</Item>
      <Item Name="[cx]">mCX</Item>
      <Item Name="[cy]">mCY</Item>
      <ExpandedItem>(CSC::RefBuffer&lt;$T1&gt;*)&amp;mImage</ExpandedItem>
    </Expand>
  </Type>

  <!--csc_matrix.hpp-->

  <Type Name="CSC::VectorLayout">
    <Expand HideRawView="true">
      <ExpandedItem>(double(*)[4][1])&amp;mVector</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::MatrixLayout">
    <Expand HideRawView="true">
      <ExpandedItem>(double(*)[4][4])&amp;mMatrix</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::DuplexMatrixLayout">
    <Expand HideRawView="true">
      <ExpandedItem>mDuplexMatrix</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::QuaternionLayout">
    <Expand HideRawView="true">
      <ExpandedItem>(double(*)[4])&amp;mQuaternion</ExpandedItem>
    </Expand>
  </Type>

  <!--csc_string.hpp-->

  <Type Name="CSC::XmlParserTree">
    <Expand HideRawView="true">
      <ExpandedItem>mTree</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::XmlParser">
    <Expand HideRawView="true">
      <Item Name="[index]">mIndex</Item>
      <ExpandedItem>mThis</ExpandedItem>
      <ExpandedItem Condition="mThis.mLayout!=0">((CSC::XmlParserNode*)(*(CSC::XmlParserTree*)mThis.mLayout).mTree.mArray.mBuffer)[mIndex]</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::JsonParserTree">
    <Expand HideRawView="true">
      <ExpandedItem>mTree</ExpandedItem>
    </Expand>
  </Type>

  <Type Name="CSC::JsonParser">
    <Expand HideRawView="true">
      <Item Name="[index]">mIndex</Item>
      <ExpandedItem>mThis</ExpandedItem>
      <ExpandedItem Condition="mThis.mLayout!=0">((CSC::JsonParserNode*)(*(CSC::JsonParserTree*)mThis.mLayout).mTree.mArray.mBuffer)[mIndex]</ExpandedItem>
    </Expand>
  </Type>

</AutoVisualizer>